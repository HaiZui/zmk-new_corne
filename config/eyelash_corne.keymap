#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        tilde_macro: tilde_macro {
            compatible = "zmk,behavior-macro";
            label = "Tilde Macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RIGHT_BRACKET) &kp SPACE>;
        };

        grace_macro: grace_macro {
            compatible = "zmk,behavior-macro";
            label = "Grace Macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RIGHT_BRACKET) &kp SPACE>;
        };

        grave_macro: grave_macro {
            compatible = "zmk,behavior-macro";
            label = "Grave Macro";
            #binding-cells = <0>;
            bindings = <&kp LS(EQUAL) &kp SPACE>;
        };

        alt_hold: alt_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Alt while Fn layer active";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &none>;
            flavor = "hold-preferred";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T                               &kp UP                &kp Y            &kp U  &kp I      &kp O    &kp P     &kp ENTER
&td0       &kp A  &kp S  &kp D     &kp F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H            &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp C_MUTE              &kp DOWN              &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &lt 3 SPACE                                               &lt 3 BACKSPACE  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &trans           &kp LS(N8)         &kp LS(N9)        &kp LS(N0)        &kp LS(MINUS)                                   &mmv MOVE_UP                        &trans           &kp N7           &kp N8           &kp N9           &grace_macro        &trans
&trans  &kp LEFT_BRACKET &kp RA(N8)         &kp RA(N9)        &kp LS(N6)        &kp RA(N2)                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT     &trans           &kp N4           &kp N5           &kp N6           &kp BACKSLASH       &kp PIPE
&trans  &trans           &kp RA(N7)         &kp RA(N0)        &kp NUBS          &kp LS(NUBS)      &kp C_MUTE                    &mmv MOVE_DOWN                      &trans           &kp N1           &kp N2           &kp N3           &grave_macro        &tilde_macro
                                            &trans            &trans            &trans                                                                              &trans           &kp DEL          &kp N0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "ARROW";
            bindings = <
&trans          &kp EXCL        &kp AT          &kp HASH        &kp RA(N4)          &kp PRCNT                                           &mmv MOVE_UP                        &kp PAGE_UP     &kp HOME            &kp UP_ARROW        &kp END             &trans  &trans
&trans          &trans          &kp LS(N7)      &kp RA(MINUS)   &trans              &trans                              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT     &kp PAGE_DOWN   &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW     &trans  &trans
&trans          &trans          &trans          &trans          &trans              &trans             &trans                           &mmv MOVE_DOWN                      &trans          &kp LC(LEFT_ARROW)  &trans              &kp LC(RIGHT_ARROW) &trans  &trans
                                                &trans          &trans              &kp SPACE                                                                               &trans          &trans              &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&alt_hold      &kp F1          &kp F2          &kp F3                  &kp F4              &kp F5                                                  &mmv MOVE_UP                        &kp F6       &kp F7             &kp F8              &kp F9              &kp F10             &kp F11
&trans          &bt BT_PRV      &bt BT_NXT      &rgb_ug RGB_HUI         &rgb_ug RGB_BRI     &rgb_ug RGB_EFF                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT     &trans       &trans             &trans              &trans              &bt BT_CLR              &kp F12
&sys_reset      &out OUT_USB    &out OUT_BLE    &rgb_ug RGB_HUD         &rgb_ug RGB_BRD     &rgb_ug RGB_TOG     &kp C_MUTE                          &mmv MOVE_DOWN                      &trans       &trans             &trans              &trans              &studio_unlock      &sys_reset
                                                &trans                  &trans              &trans                                                                                      &trans       &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
